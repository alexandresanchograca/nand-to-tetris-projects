// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:  
    DMux8Way(in=load, sel=address[11..13], a=a, b=aa, c=aaa, d=aaaa, e=aaaaa, f=aaaaaa, g=aaaaaaa, h=aaaaaaaa); //escolhe entre as 8 RAM64

    RAM4K(in=in, load=a, address=address[0..11], out=or);
    RAM4K(in=in, load=aa, address=address[0..11], out=oor);
    RAM4K(in=in, load=aaa, address=address[0..11], out=ooor);
    RAM4K(in=in, load=aaaa, address=address[0..11], out=oooor);
    RAM4K(in=in, load=aaaaa, address=address[0..11], out=ooooor);
    RAM4K(in=in, load=aaaaaa, address=address[0..11], out=oooooor);
    RAM4K(in=in, load=aaaaaaa, address=address[0..11], out=ooooooor);
    RAM4K(in=in, load=aaaaaaaa, address=address[0..11], out=oooooooor);

    Mux8Way16(a=or, b=oor, c=ooor, d=oooor, e=ooooor, f=oooooor, g=ooooooor, h=oooooooor, sel=address[11..13], out=out);
}