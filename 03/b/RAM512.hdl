// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux8Way(in=load, sel=address[6..8], a=a, b=aa, c=aaa, d=aaaa, e=aaaaa, f=aaaaaa, g=aaaaaaa, h=aaaaaaaa); //escolhe entre as 8 RAM64

    RAM64(in=in, load=a, address=address[0..5], out=or);
    RAM64(in=in, load=aa, address=address[0..5], out=oor);
    RAM64(in=in, load=aaa, address=address[0..5], out=ooor);
    RAM64(in=in, load=aaaa, address=address[0..5], out=oooor);
    RAM64(in=in, load=aaaaa, address=address[0..5], out=ooooor);
    RAM64(in=in, load=aaaaaa, address=address[0..5], out=oooooor);
    RAM64(in=in, load=aaaaaaa, address=address[0..5], out=ooooooor);
    RAM64(in=in, load=aaaaaaaa, address=address[0..5], out=oooooooor);

    Mux8Way16(a=or, b=oor, c=ooor, d=oooor, e=ooooor, f=oooooor, g=ooooooor, h=oooooooor, sel=address[6..8], out=out);
}